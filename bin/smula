#!/usr/bin/env php

<?php

class Smula
{
	private $version = '0.0.2';

	function __construct($argv)
	{
		if (count($argv) < 3) {
			if (isset($argv[1])) {
				switch ($argv[1]) {
					case 'serve':
						$projectFolder = $this->findProjectFolder();
						echo "Serving on http://localhost:808 Ctrl-C to exit\n";
						exec("sudo php -S localhost:808 -t $projectFolder/public");

						exit(0);

					case 'help':
						$this->displayHelp();
						exit(0);

					case 'update':
						$path = substr(exec('which smula'), 0, -9);
						echo exec("cd $path && git pull");
						echo "\n";
						exec("smula version");

					case 'version':
						echo "Version: $this->version\n";
						exit(0);

					default:
						break;
				}
			}

			echo "Not enough arguments!\n";
			if (!isset($argv[1]))
				echo "Please specify an option\n";
			if (!isset($argv[2]))
				echo "Please specify a name\n";

			exit(1);
		}

		$option = $argv[1];
		$name = $argv[2];

		if (strpos($option, ':') > -1) {
			$option = explode(':', $option);
			if (count($option) > 2) {
				echo "Invalid option\n";
				exit(1);
			}

			switch ($option[0]) {
				case 'make':
					$this->makeSelector($option[1], $name);
					break;

				default:
					echo "Invalid option\n";
					exit(1);
			}
		} else {
			if ($option == 'new') {
				$this->generateNewProject($name);
				exit(0);
			}
		}
	}

	function generateNewProject($name)
	{
		echo "Creating the folder $name and setting up the new project\n";

		exec("mkdir $name");
		exec("cp -R ".__DIR__."/../src/. $name/.");
		exec("mv $name/gitignore $name/.gitignore");
		exec("cd $name && composer install");

		exit(0);
	}

	function makeSelector($opt, $name)
	{
		switch ($opt) {
			case 'controller':
				$this->makeController($name);
				break;

			default:
				echo "Invalid option\n";
				exit(1);
		}
	}

	function makeController($name)
	{
		$projectFolder = $this->findProjectFolder();

		echo "Generating a controller with the name $name\n";

		$controller = file_get_contents(__DIR__.'/../templates/controller.php');
		$controller = str_replace("[NAME]", $name, $controller);
		file_put_contents($projectFolder."/app/controllers/".$name.".php", $controller);

		exit(0);
	}

	function findProjectFolder($current = "recursive")
	{
		if ($current == "recursive") {
			$current = exec('pwd');
		}

		if ($current == false) {
			echo "Unable to find project directory\n";
			exit(1);
		}

		$files = scandir($current);
		if (in_array('app', $files))
			return $current;

		$folders = explode('/', $current);
		array_pop($folders);

		return $this->findProjectFolder(implode('/', $folders));
	}

	function displayHelp()
	{
		echo "Usage: smula [option] [name]\n\n";
		echo "Options:\n";
		echo "help \t\t\tShow this help\n";
		echo "update \t\t\tUpdate smula\n";
		echo "version \t\tShow current version\n";
		echo "\n";
		echo "new [name]\t\tCreate a new project in folder [name]\n";
		echo "make:controller [name]\tMake a new controller with the [name]\n";
	}
}

new Smula($argv);

?>
